{"version":3,"file":"static/js/editPage.39582956.chunk.js","mappings":"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","sources":["webpack://questionnaire/./src/pages/Question/Edit/index.module.scss?72ef","webpack://questionnaire/./src/pages/Question/Edit/EditCanvas/index.module.scss?8212","hooks/useBindCanvasKeyPress.ts","components/DragSortable/SortableContainer.tsx","components/DragSortable/SortableItem.tsx","pages/Question/Edit/EditCanvas/index.tsx","webpack://questionnaire/./src/pages/Question/Edit/LeftPanel/ComponentLib/index.module.scss?6299","pages/Question/Edit/LeftPanel/ComponentLib/index.tsx","webpack://questionnaire/./src/pages/Question/Edit/LeftPanel/Layers/index.module.scss?0e37","pages/Question/Edit/LeftPanel/Layers/index.tsx","pages/Question/Edit/LeftPanel/index.tsx","pages/Question/Edit/RightPanel/ComponentProp/index.tsx","pages/Question/Edit/RightPanel/PageSetting/index.tsx","pages/Question/Edit/RightPanel/index.tsx","pages/Question/Edit/EditHeader/EditToolbar/index.tsx","webpack://questionnaire/./src/pages/Question/Edit/EditHeader/index.module.scss?0e77","pages/Question/Edit/EditHeader/index.tsx","pages/Question/Edit/index.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Edit_container__6sY1S\",\"content-wrapper\":\"Edit_content-wrapper__dAInz\",\"content\":\"Edit_content__qIqOv\",\"left\":\"Edit_left__8pEFV\",\"main\":\"Edit_main__yaZjf\",\"canvas-wrapper\":\"Edit_canvas-wrapper__T6wyU\",\"right\":\"Edit_right__iSU2t\"};","// extracted by mini-css-extract-plugin\nexport default {\"canvas\":\"EditCanvas_canvas__t323a\",\"component-wrapper\":\"EditCanvas_component-wrapper__3Tni6\",\"locked\":\"EditCanvas_locked__4m764\",\"selected\":\"EditCanvas_selected__DiSVG\",\"component\":\"EditCanvas_component__UOp7q\"};","import { useKeyPress } from 'ahooks'\nimport { useDispatch } from 'react-redux'\nimport { ActionCreators as UndoOrRedoActionCreators } from 'redux-undo'\nimport {\n  copySelectedComponent,\n  removeSelectedComponent,\n  pasteCopiedComponent,\n  selectPrevComponent,\n  selectNextComponent,\n} from '../store/componentsReducer'\n\n/**\n * 判断activeElement是否合法\n */\nconst isActiveElementValid = () => {\n  const activeElement = document.activeElement\n  // 没有增加dnd-kit之前\n  //if (activeElement === document.body) return true\n\n  // 增加了dnd-kit之后\n  if (activeElement === document.body) return true\n  if (activeElement?.matches('div[role=\"button\"]')) return true\n  return false\n}\n\nconst useBindCanvasKeyPress = () => {\n  const dispatch = useDispatch()\n\n  // 删除组件\n  useKeyPress(['backspace', 'delete'], () => {\n    if (!isActiveElementValid()) return\n    dispatch(removeSelectedComponent())\n  })\n\n  // 复制\n  useKeyPress(['ctrl.c', 'meta.c'], () => {\n    if (!isActiveElementValid()) return\n    dispatch(copySelectedComponent())\n  })\n\n  // 粘贴\n  useKeyPress(['ctrl.v', 'meta.v'], () => {\n    if (!isActiveElementValid()) return\n    dispatch(pasteCopiedComponent())\n  })\n\n  // 选中上一个\n  useKeyPress('uparrow', () => {\n    dispatch(selectPrevComponent())\n  })\n\n  // 选中下一个\n  useKeyPress('downarrow', () => {\n    dispatch(selectNextComponent())\n  })\n\n  //撤销\n  useKeyPress(\n    ['ctrl.z', 'meta.z'],\n    () => {\n      dispatch(UndoOrRedoActionCreators.undo())\n    },\n    {\n      exactMatch: true,\n    }\n  )\n  // 重做\n  useKeyPress(\n    ['ctrl.shift.z', 'meta.shift.z'],\n    () => {\n      dispatch(UndoOrRedoActionCreators.redo())\n    },\n    {\n      exactMatch: true,\n    }\n  )\n}\n\nexport default useBindCanvasKeyPress\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React, { FC } from 'react'\nimport {\n  DndContext,\n  closestCenter,\n  MouseSensor,\n  useSensor,\n  useSensors,\n  DragEndEvent,\n} from '@dnd-kit/core'\n\nimport {\n  arrayMove,\n  SortableContext,\n  //sortableKeyboardCoordinates,\n  verticalListSortingStrategy,\n} from '@dnd-kit/sortable'\ntype PropsType = {\n  children: JSX.Element | JSX.Element[]\n  items: Array<{ id: string; [key: string]: any }>\n  onDragEnd: (oldIndex: number, newIndex: number) => void\n}\nconst SortableContainer: FC<PropsType> = (props: PropsType) => {\n  const { children, items, onDragEnd } = props\n\n  const sensors = useSensors(\n    useSensor(MouseSensor, {\n      activationConstraint: {\n        distance: 8, // 8px\n      },\n    })\n  )\n\n  function handleDragEnd(event: DragEndEvent) {\n    const { active, over } = event\n    if (over === null) return\n\n    if (active.id !== over.id) {\n      const oldIndex = items.findIndex(item => item.id === active.id)\n      const newIndex = items.findIndex(item => item.id === over.id)\n      onDragEnd(oldIndex, newIndex)\n    }\n  }\n\n  return (\n    <DndContext sensors={sensors} collisionDetection={closestCenter} onDragEnd={handleDragEnd}>\n      <SortableContext items={items} strategy={verticalListSortingStrategy}>\n        {children}\n      </SortableContext>\n    </DndContext>\n  )\n}\n\nexport default SortableContainer\n","import React, { FC } from 'react'\nimport { useSortable } from '@dnd-kit/sortable'\nimport { CSS } from '@dnd-kit/utilities'\n\ntype PropsType = {\n  id: string\n  children: JSX.Element\n}\n\nconst SortableItem: FC<PropsType> = ({ id, children }) => {\n  const { attributes, listeners, setNodeRef, transform, transition } = useSortable({ id })\n  const style = {\n    transform: CSS.Transform.toString(transform),\n    transition,\n  }\n  return (\n    <div ref={setNodeRef} style={style} {...attributes} {...listeners}>\n      {children}\n    </div>\n  )\n}\n\nexport default SortableItem\n","import React, { FC, MouseEvent } from 'react'\nimport { Spin } from 'antd'\nimport { useDispatch } from 'react-redux'\nimport classNames from 'classnames'\nimport styles from './index.module.scss'\nimport useGetComponentInfo from '@/hooks/useGetComponentInfo'\nimport { getComponentConfByType } from '@/components/QuestionComponents'\nimport useBindCanvasKeyPress from '@/hooks/useBindCanvasKeyPress'\nimport SortableContainer from '@/components/DragSortable/SortableContainer'\nimport SortableItem from '@/components/DragSortable/SortableItem'\nimport { ComponentInfoType, changeSelectedId, moveComponent } from '@/store/componentsReducer'\n\ntype PropsType = {\n  loading: boolean\n}\n\n// 生成组件\nfunction genComponent(component: ComponentInfoType) {\n  const { type, props } = component\n  // 通过组件类型获得组件实例\n  const componentCof = getComponentConfByType(type)\n  // 找不到\n  if (!componentCof) return null\n\n  // 拿到当前type所对应的组件实例\n  const { Component } = componentCof\n  // 返回组件实例 以及向里面传入相对应的数据 如果没有则显示默认数据\n  return <Component {...props} />\n}\n\nconst EditCanvas: FC<PropsType> = (props: PropsType) => {\n  const { loading } = props\n  // 获得后端返回的组件列表\n  const { componentList, selectedId } = useGetComponentInfo()\n  const dispatch = useDispatch()\n\n  function handleClick(event: MouseEvent, id: string) {\n    // 因为我们需要点击到父元素上时取消选中 但是由于事件冒泡会传给父元素\n    event.stopPropagation()\n    dispatch(changeSelectedId(id))\n  }\n  // 绑定快捷键\n  useBindCanvasKeyPress()\n  // 页面加载时 显示的loading\n  if (loading) {\n    return (\n      <div style={{ textAlign: 'center', marginTop: '24px' }}>\n        <Spin />\n      </div>\n    )\n  }\n  // 结束拖拽时\n  function handleDragEnd(oldIndex: number, newIndex: number) {\n    dispatch(moveComponent({ oldIndex, newIndex }))\n    //console.log('handleDragEnd', oldIndex, newIndex)\n  }\n  // 因为SortableContainer需要数据项中都有id\n  const componentListWithId = componentList.map(item => {\n    return {\n      ...item,\n      id: item.id,\n    }\n  })\n  return (\n    <SortableContainer items={componentListWithId} onDragEnd={handleDragEnd}>\n      <div className={styles.canvas}>\n        {/* 过滤掉要隐藏的组件 */}\n        {componentList\n          .filter(c => !c.isHidden)\n          .map(c => {\n            const { id, isLocked } = c\n            // 拼接class name\n            // 设置默认的类名\n            const wrapperDefaultClassName = styles['component-wrapper']\n            // 设置选中时的类名\n            const selectedClassName = styles.selected\n            const lockedClassName = styles.locked\n            // 判断当前的id是否等于选中的id，如果相等则设置选中时的类名，否则设置默认的类名\n            const wrapperClassName = classNames({\n              [wrapperDefaultClassName]: true,\n              [selectedClassName]: id === selectedId,\n              [lockedClassName]: isLocked,\n            })\n            return (\n              <SortableItem key={id} id={id}>\n                <div key={id} className={wrapperClassName} onClick={e => handleClick(e, id)}>\n                  <div className={styles.component}>{genComponent(c)}</div>\n                </div>\n              </SortableItem>\n            )\n          })}\n      </div>\n    </SortableContainer>\n  )\n}\n\nexport default EditCanvas\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ComponentLib_container__KS4F0\",\"wrapper\":\"ComponentLib_wrapper__wi1jU\",\"component\":\"ComponentLib_component__Nys+s\"};","import React, { FC, useCallback } from 'react'\nimport { Typography } from 'antd'\nimport { nanoid } from 'nanoid'\nimport { useDispatch } from 'react-redux'\nimport { componentCofGroup, ComponentConfType } from '@/components/QuestionComponents'\nimport { addComponent } from '@/store/componentsReducer'\nimport styles from './index.module.scss'\n\nconst { Title } = Typography\n\n// 生成组件\nfunction genComponent(c: ComponentConfType) {\n  const { Component, title, type, defaultProps } = c\n  const dispatch = useDispatch()\n  // 点击某一个组件 将它添加到画布中\n  const handleClick = useCallback(() => {\n    dispatch(\n      addComponent({\n        id: nanoid(5),\n        title,\n        type,\n        props: defaultProps,\n      })\n    )\n  }, [])\n  return (\n    <div key={type} className={styles.wrapper} onClick={handleClick}>\n      <div className={styles.component}>\n        <Component />\n      </div>\n    </div>\n  )\n}\n\nconst Lib: FC = () => {\n  return (\n    <div className={styles.container}>\n      {componentCofGroup.map((group, index) => {\n        return (\n          <div key={group.groupId}>\n            <Title level={3} style={{ fontSize: '16px', marginTop: index > 0 ? '20px' : '0px' }}>\n              {group.groupName}\n            </Title>\n            <div>{group.components.map(c => genComponent(c))}</div>\n          </div>\n        )\n      })}\n    </div>\n  )\n}\n\nexport default Lib\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Layers_wrapper__Pp+-M\",\"title\":\"Layers_title__xkRcI\",\"selected\":\"Layers_selected__G08Pb\",\"handler\":\"Layers_handler__K72CK\",\"btn\":\"Layers_btn__WWmi+\"};","import React, { ChangeEvent, useState } from 'react'\nimport { Button, Input, Space, message } from 'antd'\nimport { EyeInvisibleOutlined, LockOutlined } from '@ant-design/icons'\nimport { useDispatch } from 'react-redux'\nimport classnames from 'classnames'\nimport SortableContainer from '@/components/DragSortable/SortableContainer'\nimport useGetComponentInfo from '@/hooks/useGetComponentInfo'\nimport styles from './index.module.scss'\nimport {\n  changeSelectedId,\n  changeComponentTitle,\n  changeComponentHidden,\n  toggleComponentLocked,\n  moveComponent,\n} from '@/store/componentsReducer'\nimport SortableItem from '@/components/DragSortable/SortableItem'\n\nconst Layers: React.FC = () => {\n  const { componentList, selectedId } = useGetComponentInfo()\n  // 记录当前正在修改标题的组件\n  const [changTitleId, setChangeTitleId] = useState('')\n  const dispatch = useDispatch()\n  // 点击图层时选中当前组件 已经选中时再点击则变成输入框进行修改\n  function handleTitleClick(id: string) {\n    const cur = componentList.find(item => item.id === id)\n    if (cur && cur.isHidden) {\n      message.info('该组件已隐藏，无法点击')\n      return\n    }\n    // 说明这是第一次选中它 不需要变成输入框\n    if (id !== selectedId) {\n      // 进行redux来修改selectedId\n      dispatch(changeSelectedId(id))\n      setChangeTitleId('')\n      return\n    }\n    // 到了这里说明就是在选中的基础上进行点击 那么变为输入框\n    setChangeTitleId(id)\n  }\n  // 修改组件标题\n  function handleChangTitle(e: ChangeEvent<HTMLInputElement>) {\n    const newValue = e.target.value.trim()\n    if (!newValue) return\n    if (!selectedId) return\n\n    // 提交给redux\n    dispatch(changeComponentTitle({ id: selectedId, title: newValue }))\n  }\n\n  // 点击隐藏按钮\n  function handleHiddenClick(id: string) {\n    const cur = componentList.find(c => c.id === id)\n    if (cur) dispatch(changeComponentHidden({ id, isHidden: !cur.isHidden }))\n  }\n\n  // 点击锁定按钮\n  function handleLockClick(id: string) {\n    dispatch(toggleComponentLocked({ id }))\n  }\n  // 结束拖拽时\n  function handleDragEnd(oldIndex: number, newIndex: number) {\n    dispatch(moveComponent({ oldIndex, newIndex }))\n  }\n  // 因为SortableContainer需要数据项中都有id\n  const componentListWithId = componentList.map(item => {\n    return {\n      ...item,\n      id: item.id,\n    }\n  })\n  return (\n    <SortableContainer items={componentListWithId} onDragEnd={handleDragEnd}>\n      {componentList.map(item => {\n        const { id, title, isHidden, isLocked } = item\n\n        const baseStyle = styles.title\n        const selectedStyle = styles.selected\n        const titleStyle = classnames({\n          [baseStyle]: true,\n          [selectedStyle]: id === selectedId,\n        })\n        return (\n          <SortableItem key={id} id={id}>\n            <div className={styles.wrapper}>\n              <div className={titleStyle} onClick={() => handleTitleClick(id)}>\n                {(id === changTitleId && (\n                  <Input\n                    value={title}\n                    onChange={handleChangTitle}\n                    onPressEnter={() => setChangeTitleId('')}\n                    onBlur={() => setChangeTitleId('')}\n                  />\n                )) ||\n                  title}\n              </div>\n              <div className={styles.handler}>\n                <Space>\n                  <Button\n                    size=\"small\"\n                    shape=\"circle\"\n                    className={!isHidden ? styles.btn : ''}\n                    icon={<EyeInvisibleOutlined />}\n                    type={isHidden ? 'primary' : 'default'}\n                    onClick={() => handleHiddenClick(id)}\n                  />\n                  <Button\n                    size=\"small\"\n                    shape=\"circle\"\n                    className={!isLocked ? styles.btn : ''}\n                    icon={<LockOutlined />}\n                    type={isLocked ? 'primary' : 'default'}\n                    onClick={() => handleLockClick(id)}\n                  />\n                </Space>\n              </div>\n            </div>\n          </SortableItem>\n        )\n      })}\n    </SortableContainer>\n  )\n}\n\nexport default Layers\n","import React, { FC } from 'react'\nimport { Tabs } from 'antd'\nimport { AppstoreOutlined, BarsOutlined } from '@ant-design/icons'\nimport Lib from './ComponentLib'\nimport Layers from './Layers'\nconst LeftPanel: FC = () => {\n  const tabsItems = [\n    {\n      key: 'componentLib',\n      label: (\n        <span>\n          <AppstoreOutlined />\n          组件库\n        </span>\n      ),\n      children: <Lib />,\n    },\n    {\n      key: 'layers',\n      label: (\n        <span>\n          <BarsOutlined />\n          图层\n        </span>\n      ),\n      children: <Layers />,\n    },\n  ]\n  return <Tabs items={tabsItems} defaultActiveKey=\"componentLib\" />\n}\n\nexport default LeftPanel\n","import React, { FC } from 'react'\nimport { useDispatch } from 'react-redux'\nimport useGetComponentInfo from '@/hooks/useGetComponentInfo'\nimport { getComponentConfByType, ComponentPropsType } from '@/components/QuestionComponents/index'\nimport { changeComponentProps } from '@/store/componentsReducer'\n/**\n * 当没有选中组件时返回\n * @returns\n */\n\nconst ComponentProp: FC = () => {\n  // 使用useGetComponentInfo获取当前选中的组件\n  const { selectedComponent } = useGetComponentInfo()\n  // 使用useDispatch获取dispatch\n  const dispatch = useDispatch()\n\n  // 改变属性\n  function changeProps(newProps: ComponentPropsType) {\n    if (!selectedComponent) return\n    const { id } = selectedComponent\n    dispatch(changeComponentProps({ id, newProps }))\n  }\n\n  // 通过类型获取组件配置 来拿到propComponent渲染\n  const { type = '', props, isLocked } = selectedComponent || {}\n  const componentCof = getComponentConfByType(type)\n  const { PropComponent } = componentCof || {}\n  if (!PropComponent)\n    return (\n      <>\n        <div>错误</div>\n      </>\n    )\n  return <PropComponent {...props} onChange={changeProps} disabled={isLocked} />\n}\n\nexport default ComponentProp\n","import React, { useEffect } from 'react'\nimport { Form, Input } from 'antd'\nimport { useDispatch } from 'react-redux'\nimport useGetPageInfo from '@/hooks/useGetPageInfo'\nimport { resetPageInfo } from '@/store/PageInfoReducer'\nconst { TextArea } = Input\n\nconst PageSetting: React.FC = () => {\n  // 获取页面信息\n  const { title, desc, js, css } = useGetPageInfo()\n  // 使用useForm()获取表单实例\n  const [form] = Form.useForm()\n  // 使用useDispatch()获取dispatch函数\n  const dispatch = useDispatch()\n  // 当title, desc, js, css发生变化时，将表单值设置为页面信息\n  useEffect(() => {\n    form.setFieldsValue({ title, desc, js, css })\n  }, [title, desc, js, css])\n\n  // 当表单值发生变化时，调用dispatch函数，将表单值传入，重置页面信息\n  function handleValueChange() {\n    dispatch(resetPageInfo(form.getFieldsValue()))\n  }\n\n  return (\n    <Form\n      form={form}\n      initialValues={{ title, desc, js, css }}\n      onValuesChange={handleValueChange}\n      layout=\"vertical\"\n    >\n      <Form.Item\n        name=\"title\"\n        label=\"页面标题\"\n        rules={[{ required: true, message: '请输入页面标题' }]}\n      >\n        <Input />\n      </Form.Item>\n      <Form.Item name=\"desc\" label=\"页面描述\">\n        <TextArea />\n      </Form.Item>\n      <Form.Item name=\"js\" label=\"页面脚本\">\n        <TextArea />\n      </Form.Item>\n      <Form.Item name=\"css\" label=\"页面样式\">\n        <TextArea />\n      </Form.Item>\n    </Form>\n  )\n}\n\nexport default PageSetting\n","import React, { FC, useEffect, useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { Tabs } from 'antd'\nimport { FileTextOutlined, SettingOutlined } from '@ant-design/icons'\nimport ComponentProp from './ComponentProp'\nimport PageSetting from './PageSetting'\nimport useGetComponentInfo from '@/hooks/useGetComponentInfo'\nimport { changeSelectedId } from '@/store/componentsReducer'\n\nenum TABS_KEY {\n  PROP_KEY = 'prop',\n  SETTING_KEY = 'setting',\n}\n\nconst RightPanel: FC = () => {\n  const [activeKey, setActiveKey] = useState(TABS_KEY.PROP_KEY)\n  const { selectedId } = useGetComponentInfo()\n  const dispatch = useDispatch()\n  useEffect(() => {\n    if (!selectedId) setActiveKey(TABS_KEY.SETTING_KEY)\n    else setActiveKey(TABS_KEY.PROP_KEY)\n  }, [selectedId])\n\n  function handleClickTab() {\n    dispatch(changeSelectedId(''))\n    setActiveKey(TABS_KEY.SETTING_KEY)\n  }\n\n  const tabsItems = [\n    {\n      key: TABS_KEY.PROP_KEY,\n      label: (\n        <span>\n          <FileTextOutlined />\n          属性\n        </span>\n      ),\n      children: <ComponentProp />,\n    },\n    {\n      key: TABS_KEY.SETTING_KEY,\n      label: (\n        <span onClick={handleClickTab}>\n          <SettingOutlined />\n          页面设置\n        </span>\n      ),\n      children: <PageSetting />,\n    },\n  ]\n\n  return <Tabs items={tabsItems} activeKey={activeKey} />\n}\n\nexport default RightPanel\n","import React, { FC } from 'react'\nimport { Button, Space, Tooltip } from 'antd'\nimport {\n  BlockOutlined,\n  CopyOutlined,\n  DeleteOutlined,\n  DownOutlined,\n  EyeInvisibleOutlined,\n  LockOutlined,\n  RedoOutlined,\n  UndoOutlined,\n  UpOutlined,\n} from '@ant-design/icons'\nimport { useDispatch } from 'react-redux'\nimport { ActionCreators as UndoOrRedoActionCreators } from 'redux-undo'\nimport {\n  changeComponentHidden,\n  removeSelectedComponent,\n  toggleComponentLocked,\n  copySelectedComponent,\n  pasteCopiedComponent,\n  moveComponent,\n} from '@/store/componentsReducer'\nimport useGetComponentInfo from '@/hooks/useGetComponentInfo'\n\nconst EditTool: FC = () => {\n  const dispatch = useDispatch()\n  const {\n    selectedId,\n    selectedComponent,\n    copiedComponents,\n    componentList = [],\n  } = useGetComponentInfo() // 获取组件的信息\n  const { isLocked } = selectedComponent || {}\n  const selectedIndex = componentList.findIndex(c => c.id === selectedId)\n  const isFirst = selectedIndex <= 0 // 是第一个\n  const isLast = selectedIndex >= componentList.length - 1\n\n  function handleDelete() {\n    // 删除组件\n    dispatch(removeSelectedComponent())\n  }\n  function handleHidden() {\n    // 隐藏组件\n    dispatch(changeComponentHidden({ id: selectedId, isHidden: true }))\n  }\n  // 锁定组件\n  function handleLock() {\n    dispatch(toggleComponentLocked({ id: selectedId }))\n  }\n  // 复制\n  function handleCopy() {\n    dispatch(copySelectedComponent())\n  }\n  // 粘贴\n  function handlePaste() {\n    dispatch(pasteCopiedComponent())\n  }\n  // 上移\n  function handleMoveUp() {\n    if (isFirst) return\n    dispatch(moveComponent({ oldIndex: selectedIndex, newIndex: selectedIndex - 1 }))\n  }\n  // 下移\n  function handleMoveDown() {\n    if (isLast) return\n    dispatch(moveComponent({ oldIndex: selectedIndex, newIndex: selectedIndex + 1 }))\n  }\n  // 撤销\n  function handleUndo() {\n    dispatch(UndoOrRedoActionCreators.undo())\n  }\n  function handleRedo() {\n    dispatch(UndoOrRedoActionCreators.redo())\n  }\n  return (\n    <div>\n      <Space>\n        <Tooltip title=\"删除\">\n          <Button shape=\"circle\" icon={<DeleteOutlined />} onClick={handleDelete} />\n        </Tooltip>\n        <Tooltip title=\"隐藏\">\n          <Button shape=\"circle\" icon={<EyeInvisibleOutlined />} onClick={handleHidden} />\n        </Tooltip>\n        <Tooltip title=\"锁定\">\n          <Button\n            shape=\"circle\"\n            icon={<LockOutlined />}\n            onClick={handleLock}\n            type={isLocked ? 'primary' : 'default'}\n          />\n        </Tooltip>\n        <Tooltip title=\"复制\">\n          <Button shape=\"circle\" icon={<CopyOutlined />} onClick={handleCopy} />\n        </Tooltip>\n        <Tooltip title=\"粘贴\">\n          <Button\n            shape=\"circle\"\n            icon={<BlockOutlined />}\n            onClick={handlePaste}\n            disabled={copiedComponents === null}\n          />\n        </Tooltip>\n        <Tooltip title=\"上移\">\n          <Button shape=\"circle\" icon={<UpOutlined />} onClick={handleMoveUp} disabled={isFirst} />\n        </Tooltip>\n        <Tooltip title=\"下移\">\n          <Button\n            shape=\"circle\"\n            icon={<DownOutlined />}\n            onClick={handleMoveDown}\n            disabled={isLast}\n          />\n        </Tooltip>\n        <Tooltip title=\"撤销\">\n          <Button shape=\"circle\" icon={<UndoOutlined />} onClick={handleUndo} />\n        </Tooltip>\n        <Tooltip title=\"重做\">\n          <Button shape=\"circle\" icon={<RedoOutlined />} onClick={handleRedo} />\n        </Tooltip>\n      </Space>\n    </div>\n  )\n}\n\nexport default EditTool\n","// extracted by mini-css-extract-plugin\nexport default {\"header-wrapper\":\"EditHeader_header-wrapper__J1TD3\",\"header\":\"EditHeader_header__K5ekc\",\"left\":\"EditHeader_left__qMc01\",\"main\":\"EditHeader_main__h9X6I\",\"right\":\"EditHeader_right__jboT1\"};","import React, { FC, useState, ChangeEvent } from 'react'\nimport { useNavigate, useParams } from 'react-router-dom'\nimport { useDispatch } from 'react-redux'\nimport { useRequest, useKeyPress, useDebounceEffect } from 'ahooks'\nimport { Button, Space, Typography, Input, message } from 'antd'\nimport { LeftOutlined, EditOutlined, LoadingOutlined } from '@ant-design/icons'\nimport EditTool from './EditToolbar'\nimport useGetPageInfo from '@/hooks/useGetPageInfo'\nimport { changeTitle } from '@/store/PageInfoReducer'\nimport { updateQuestionInfoService } from '@/services/question'\nimport useGetComponentInfo from '@/hooks/useGetComponentInfo'\nimport styles from './index.module.scss'\n\nconst { Title } = Typography\n\n/**\n * 显示和修改标题\n */\nconst TitleElem: FC = () => {\n  const dispatch = useDispatch()\n  const { title = '' } = useGetPageInfo()\n  const [editState, setEditState] = useState(false)\n\n  function ChangeTitle(e: ChangeEvent<HTMLInputElement>) {\n    const newValue = e.target.value.trim()\n    if (!newValue) return\n    dispatch(changeTitle(newValue))\n  }\n\n  if (editState) {\n    return (\n      <Input\n        value={title}\n        onPressEnter={() => setEditState(false)}\n        onBlur={() => setEditState(false)}\n        onChange={ChangeTitle}\n      />\n    )\n  }\n\n  return (\n    <Space>\n      <Title>{title}</Title>\n      <Button type=\"text\" icon={<EditOutlined />} onClick={() => setEditState(true)} />\n    </Space>\n  )\n}\n\n// 保存按钮\nconst SaveBtn: FC = () => {\n  const { id = '' } = useParams()\n  const { componentList = [] } = useGetComponentInfo()\n  const pageInfo = useGetPageInfo()\n  const { loading, run: save } = useRequest(\n    async () => {\n      await updateQuestionInfoService(id, { ...pageInfo, componentList })\n    },\n    {\n      manual: true,\n    }\n  )\n  // 点击保存按钮\n  function handleSave() {\n    save()\n    message.success('保存成功😍')\n  }\n  // 监听快捷键后保存\n  useKeyPress(['ctrl.s', 'meta.s'], (e: KeyboardEvent) => {\n    e.preventDefault()\n    if (!loading) {\n      save()\n      message.success('保存成功😍')\n    }\n  })\n  // 监听改变后再自动保存\n  useDebounceEffect(\n    () => {\n      save()\n    },\n    [componentList, pageInfo],\n    {\n      wait: 600000,\n    }\n  )\n  return (\n    <Button onClick={handleSave} disabled={loading} icon={loading && <LoadingOutlined />}>\n      保存\n    </Button>\n  )\n}\n\n// 发布按钮\nconst PublishBtn: FC = () => {\n  const nav = useNavigate()\n  const { id = '' } = useParams()\n  const { componentList = [] } = useGetComponentInfo()\n  const pageInfo = useGetPageInfo()\n  const { loading, run: pub } = useRequest(\n    async () => {\n      await updateQuestionInfoService(id, {\n        ...pageInfo,\n        componentList,\n        isPublished: 1, // 问卷的发布属性为true\n      })\n    },\n    {\n      manual: true,\n      onSuccess() {\n        nav('/question/stat/' + id) //跳转统计页\n        message.success('发布成功😍')\n      },\n    }\n  )\n  return (\n    <Button type=\"primary\" disabled={loading} onClick={pub}>\n      发布\n    </Button>\n  )\n}\n\nconst EditHeader: FC = () => {\n  const nav = useNavigate()\n\n  return (\n    <div className={styles['header-wrapper']}>\n      <div className={styles.header}>\n        <div className={styles.left}>\n          <Space>\n            <Button type=\"link\" icon={<LeftOutlined />} onClick={() => nav(-1)}>\n              返回\n            </Button>\n            <TitleElem />\n          </Space>\n        </div>\n        <div className={styles.main}>\n          <EditTool />\n        </div>\n        <div className={styles.right}>\n          <Space>\n            <SaveBtn />\n            <PublishBtn />\n          </Space>\n        </div>\n      </div>\n    </div>\n  )\n}\nexport default EditHeader\n","import React, { FC } from 'react'\nimport styles from './index.module.scss'\nimport EditCanvas from './EditCanvas'\nimport useLoadingQuestionData from '@/hooks/useLoadingQuestionData'\nimport { useDispatch } from 'react-redux'\nimport { changeSelectedId } from '@/store/componentsReducer'\nimport LeftPanel from './LeftPanel'\nimport RightPanel from './RightPanel'\nimport EditHeader from './EditHeader'\nconst Edit: FC = () => {\n  const { loading } = useLoadingQuestionData()\n  const dispatch = useDispatch()\n  // 清除选中组件的边框样式\n  function clearSelected() {\n    dispatch(changeSelectedId(''))\n  }\n  return (\n    <div className={styles.container}>\n      <EditHeader />\n      <div className={styles['content-wrapper']}>\n        <div className={styles.content}>\n          <div className={styles.left}>\n            <LeftPanel />\n          </div>\n          <div className={styles.main} onClick={clearSelected}>\n            <div className={styles['canvas-wrapper']}>\n              <div>\n                <EditCanvas loading={loading} />\n              </div>\n            </div>\n          </div>\n          <div className={styles.right}>\n            <RightPanel />\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Edit\n"],"names":["isActiveElementValid","activeElement","document","body","matches","useBindCanvasKeyPress","dispatch","useDispatch","useKeyPress","removeSelectedComponent","copySelectedComponent","pasteCopiedComponent","selectPrevComponent","selectNextComponent","UndoOrRedoActionCreators","undo","exactMatch","redo","props","children","items","onDragEnd","sensors","useSensors","useSensor","MouseSensor","activationConstraint","distance","_jsx","DndContext","collisionDetection","closestCenter","event","active","over","id","oldIndex","findIndex","item","newIndex","SortableContext","strategy","verticalListSortingStrategy","_ref","attributes","listeners","setNodeRef","transform","transition","useSortable","style","CSS","Transform","toString","ref","genComponent","component","type","componentCof","getComponentConfByType","Component","loading","componentList","selectedId","useGetComponentInfo","textAlign","marginTop","Spin","componentListWithId","map","SortableContainer","moveComponent","className","styles","filter","c","isHidden","isLocked","wrapperDefaultClassName","selectedClassName","lockedClassName","wrapperClassName","classNames","SortableItem","onClick","e","stopPropagation","changeSelectedId","handleClick","Title","Typography","Lib","componentCofGroup","group","index","_jsxs","level","fontSize","groupName","components","title","defaultProps","useCallback","addComponent","nanoid","groupId","Layers","changTitleId","setChangeTitleId","useState","handleChangTitle","newValue","target","value","trim","changeComponentTitle","baseStyle","selectedStyle","titleStyle","classnames","cur","find","message","info","handleTitleClick","Input","onChange","onPressEnter","onBlur","Space","Button","size","shape","icon","EyeInvisibleOutlined","changeComponentHidden","handleHiddenClick","LockOutlined","toggleComponentLocked","handleLockClick","LeftPanel","tabsItems","key","label","AppstoreOutlined","BarsOutlined","Tabs","defaultActiveKey","ComponentProp","selectedComponent","PropComponent","newProps","changeComponentProps","disabled","_Fragment","TextArea","PageSetting","desc","js","css","useGetPageInfo","form","Form","useForm","useEffect","setFieldsValue","initialValues","onValuesChange","resetPageInfo","getFieldsValue","layout","Item","name","rules","required","TABS_KEY","RightPanel","activeKey","setActiveKey","PROP_KEY","SETTING_KEY","FileTextOutlined","SettingOutlined","EditTool","copiedComponents","selectedIndex","isFirst","isLast","length","Tooltip","DeleteOutlined","CopyOutlined","BlockOutlined","UpOutlined","DownOutlined","UndoOutlined","RedoOutlined","TitleElem","editState","setEditState","changeTitle","EditOutlined","SaveBtn","useParams","pageInfo","run","save","useRequest","async","updateQuestionInfoService","manual","preventDefault","success","useDebounceEffect","wait","LoadingOutlined","PublishBtn","nav","useNavigate","pub","isPublished","onSuccess","EditHeader","LeftOutlined","Edit","useLoadingQuestionData","EditCanvas"],"sourceRoot":""}